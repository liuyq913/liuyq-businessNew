<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:jdbc.properties" file-encoding="UTF-8"/>

    <context:component-scan base-package="com.liuyq.springtest"/>

   <!-- <aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!--测试FactoryBean-->
    <bean id="myCarFactoryBean" class="com.liuyq.springtest.ioc.factorybean.MyCarFactoryBean">
        <property name="make" value="makeing car"/>
        <property name="year" value="123"/>
    </bean>

    <bean id="person" class="com.liuyq.springtest.ioc.factorybean.Person">
        <property name="car" ref="myCarFactoryBean"/>
    </bean>

    <bean id="withinAspect" class="com.liuyq.springtest.aop.entities.Within"/>

    <aop:config>
        <aop:aspect id="myaspect" ref="withinAspect">
            <aop:pointcut id="privatePointCut"
                          expression="@within(com.liuyq.springtest.aop.annotation.AnyJoinpontAnnotation)"/>
            <aop:before method="doBefore" pointcut-ref="privatePointCut"/>
        </aop:aspect>
    </aop:config>

    <!-- 数据源配置, 使用DBCP数据库连接池 -->
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="5"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testWhileIdle" value="true"/>
    </bean>


    <!-- 配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/liuyq/springtest/**/mapper/*.xml</value>
            </list>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.liuyq.springtest.**.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="txService" class="com.liuyq.springtest.tx.service.TxService"></bean>


    <!-- 事务配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

   <!--声明式事物
    <bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
          abstract="true">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
       <property name="target" ref="txService"/>
    </bean>
    -->

    <tx:annotation-driven transaction-manager="transactionManager"/>


</beans>
